package Chapter7.SetsMaps;


import org.junit.Before;
import org.junit.Test;

import static junit.framework.TestCase.assertTrue;
import static junit.framework.TestCase.assertEquals;


public class HashTableOpenTester
{
    HashTableOpen hashTable = new HashTableOpen<String, DemoClass>();
    private final String[] KEYS = {"Alice", "Brian", "Charlie", "Darrel",
        "Edward", "Frank", "Greg", "Henry", "Isacc", "James", "Kelly"};

    private final String[] LAST_NAMES = {"Sanders", "Brown", "Belford", "Jones",
        "Dabagoo", "Dilfod", "Zion", "Cannary", "Bishop", "Soily", "Hassle"};

    private final DemoClass[] TEST_VALUES = generateValues();

    private  DemoClass[] generateValues()
    {
        DemoClass[] temp = new DemoClass[KEYS.length];
        for (int i = 0; i < KEYS.length; i++)
        {
            temp[i] = new DemoClass(i+1, KEYS[i], LAST_NAMES[i] );
        }

        return temp;
    }

    private void fillHashTable()
    {
        for (int i = 0; i < KEYS.length; i++)
        {
            hashTable.put(KEYS[i], TEST_VALUES[i]);
        }
    }

    @Before
    public void setup()
    {
        hashTable = new HashTableOpen<String, DemoClass>();
    }

    @Test
    public void testPutSingleItem()
    {
        hashTable.put("Alice", TEST_VALUES[0]);

        assertEquals("Size should be 1", 1, hashTable.size());

        DemoClass result = (DemoClass) hashTable.get("Alice");

        assertEquals("Values should be " , "Alice",  result.fName);
        assertEquals("Last name should be", "Sanders", result.lName);

        System.out.println(result);
    }

    @Test
    public void testGetNotInHashTable()
    {
        DemoClass  result = (DemoClass) hashTable.get("Peanut");

        assertEquals("Should return null", null, result);
    }

    @Test
    public void testToString()
    {
        fillHashTable();
        System.out.println(hashTable);
    }


    private class DemoClass
    {
        public int id;
        public String fName;
        public String lName;

        public DemoClass(int id, String firstName, String lastName)
        {
            this.id = id;
            this.fName = firstName;
            this.lName = lastName;

        }

        public String toString()
        {
            return String.format("(%d : %s %s)", this.id, this.fName, this.lName);
        }
    }

}
